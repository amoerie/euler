package problem021_030

import common.Problem

/**
 * Consider all integer combinations of a&#94;b for 2 <= a <= 5 and 2 <= b <= 5:
 *
 * 2&#94;2=4, 2&#94;3=8, 2&#94;4=16, 2&#94;5=32
 * 3&#94;2=9, 3&#94;3=27, 3&#94;4=81, 3&#94;5=243
 * 4&#94;2=16, 4&#94;3=64, 4&#94;4=256, 4&#94;5=1024
 * 5&#94;2=25, 5&#94;3=125, 5&#94;4=625, 5&#94;5=3125
 *
 * If they are then placed in numerical order,
 * with any repeats removed, we get the following sequence of 15 distinct terms:
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * How many distinct terms are in the sequence generated by a&#94;b for 2 <= a <= 100 and 2 <= b <= 100?
 * @author moerie
 */
object Problem29 extends Problem {
    def solve() {
        println((2 to 100).map(a => (2 to 100).map(b => (a, b))).flatten
            .map { case (a,b) => math.pow(a,b)}
            .distinct.length)
    }
}
